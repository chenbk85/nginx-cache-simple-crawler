#!/bin/bash
# nginx-simple-crawler --- Crawls a bunch of static files for Nginx cache priming.

# Copyright (C) 2011 António P. P. Almeida <appa@perusio.net>

# Author: António P. P. Almeida <appa@perusio.net>

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# Except as contained in this notice, the name(s) of the above copyright
# holders shall not be used in advertising or otherwise to promote the sale,
# use or other dealings in this Software without prior written authorization.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

## The Nginx cache purge script wrapper command. This needs to be
## configured. I suggest using super but you can use any
## other. e.g. sudo. This needed to have a safe way to invoke the
## nginx-cache-purge script that requires (rw) read-write access to
## the nginx cache directory that is owned by the web server user. In
## Debian based systems that's www-data.
NGINX_CACHE_PURGE_WRAPPER_CMD=cache-purge # the wrapper 'alias' command
SETUID_WRAPPER=/usr/bin/super # adjust

###############################################################
## In principle you shouldn't touch anything below this line.##
###############################################################
SCRIPTNAME=${0##*/}

## Source the functions for crawler.
. $(dirname $0)/nginx-cache-simple-crawler.sh

## Check the number of arguments.
if [ $# -lt 3 ]; then
    print_usage
    exit 1
fi

## The default is 20 requests in parallel.
PARALLEL=${4-20}

## Set the debug flag to yes if we pass a fifth argument otherwise set
## it to the empty string.
DEBUG_FLAG=${5+yes}

## Do some cache cleanup. If it's a new set of files then we bail out.
cleanup_cache "$2" $3

## Crawl the directory.
crawl_directory $1 "$2" $PARALLEL $DEBUG_FLAG

## Create a file indicating that this directory is cached.
echo date '+ %s' >> "$2"/$(printf '.cached_in_%s.lock' $(date '+ %d%b%Y-%Hh%Mm%Ss'))
